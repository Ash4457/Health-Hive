{"ast":null,"code":"import _toConsumableArray from\"/Users/parasnauriyal/Desktop/Web Dev/React/health-hive/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/parasnauriyal/Desktop/Web Dev/React/health-hive/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Box,Container,Grid,InputAdornment,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TablePagination,TableRow,TextField,Typography}from\"@material-ui/core\";import{Search}from\"@material-ui/icons\";import React,{useState}from\"react\";import{recipeData}from\"./recipeData\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=[\"Image\",\"Name\",\"Calories\",\"Carbs(g)\",\"Protein(g)\",\"Fat(g)\",\"Fiber(g)\"];var Recipe=function Recipe(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var _useState3=useState(10),_useState4=_slicedToArray(_useState3,2),rowsPerPage=_useState4[0],setRowsPerPage=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),searchItem=_useState6[0],setSearchItem=_useState6[1];var _useState7=useState(_toConsumableArray(recipeData)),_useState8=_slicedToArray(_useState7,2),foundArr=_useState8[0],setFoundArr=_useState8[1];var handleChangePage=function handleChangePage(event,newPage){setPage(newPage);};var handleChangeRowsPerPage=function handleChangeRowsPerPage(event){setRowsPerPage(event.target.value);setPage(0);};//   const handleSearch = (e) => {\n//     const temp = e.target.value;\n//     console.log(temp);\n//     setSearchItem(temp);\n//     if (!temp) {\n//       setFoundArr([...recipeData]);\n//     } else {\n//       const filteredArr = foundArr.filter((item) => item.food.includes(temp));\n//       setFoundArr(filteredArr);\n//     }\n//   };\nvar handleSearch=function handleSearch(e){var temp=e.target.value;console.log(temp);setSearchItem(temp);setFoundArr(searchItem?recipeData.filter(function(item){return item.food.includes(temp);}):_toConsumableArray(recipeData));};return/*#__PURE__*/_jsxs(Container,{style:{marginTop:\"40px\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",children:\"Nurtitional Analysis\"}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(Grid,{container:true,justifyContent:\"space-between\",style:{margin:\"20px 0\"},children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(TextField,{onChange:handleSearch,id:\"search\",name:\"search\",label:\"Search Food\",autoComplete:\"off\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(Search,{})})},value:searchItem})})}),/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsx(TablePagination,{rowsPerPageOptions:[10,25,100],component:\"div\",count:recipeData.length,rowsPerPage:rowsPerPage,page:page,onPageChange:handleChangePage,onRowsPerPageChange:handleChangeRowsPerPage})})]})}),/*#__PURE__*/_jsx(Paper,{style:{borderRadius:'16px'},sx:{width:\"100%\",overflow:\"hidden\"},children:/*#__PURE__*/_jsx(TableContainer,{sx:{maxHeight:440},children:/*#__PURE__*/_jsxs(Table,{stickyHeader:true,\"aria-label\":\"sticky table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsx(TableRow,{children:columns.map(function(col){return/*#__PURE__*/_jsx(TableCell,{children:col});})})}),/*#__PURE__*/_jsx(TableBody,{children:foundArr.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(item){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"img\",{alt:item.food,src:item.img,style:{height:\"50px\",width:\"45px\",borderRadius:\"25px\"}})}),/*#__PURE__*/_jsx(TableCell,{children:item.food}),/*#__PURE__*/_jsx(TableCell,{children:item.cal}),/*#__PURE__*/_jsx(TableCell,{children:item.carbs}),/*#__PURE__*/_jsx(TableCell,{children:item.protein}),/*#__PURE__*/_jsx(TableCell,{children:item.fat}),/*#__PURE__*/_jsx(TableCell,{children:item.fiber})]});})})]})})})]});};export default Recipe;","map":{"version":3,"names":["Box","Container","Grid","InputAdornment","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TextField","Typography","Search","React","useState","recipeData","columns","Recipe","page","setPage","rowsPerPage","setRowsPerPage","searchItem","setSearchItem","foundArr","setFoundArr","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","handleSearch","e","temp","console","log","filter","item","food","includes","marginTop","margin","startAdornment","length","borderRadius","width","overflow","maxHeight","map","col","slice","img","height","cal","carbs","protein","fat","fiber"],"sources":["/Users/parasnauriyal/Desktop/Web Dev/React/health-hive/src/components/Recipe.js"],"sourcesContent":["import {\n  Box,\n  Container,\n  Grid,\n  InputAdornment,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { recipeData } from \"./recipeData\";\n\nconst columns = [\n  \"Image\",\n  \"Name\",\n  \"Calories\",\n  \"Carbs(g)\",\n  \"Protein(g)\",\n  \"Fat(g)\",\n  \"Fiber(g)\",\n];\n\nconst Recipe = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [searchItem, setSearchItem] = useState(\"\");\n  const [foundArr, setFoundArr] = useState([...recipeData]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n//   const handleSearch = (e) => {\n//     const temp = e.target.value;\n//     console.log(temp);\n//     setSearchItem(temp);\n  \n//     if (!temp) {\n//       setFoundArr([...recipeData]);\n//     } else {\n//       const filteredArr = foundArr.filter((item) => item.food.includes(temp));\n//       setFoundArr(filteredArr);\n//     }\n//   };\n\n  const handleSearch = (e) => {\n    const temp = e.target.value;\n    console.log(temp);\n    setSearchItem(temp);\n  \n    setFoundArr(\n        searchItem\n        ? recipeData.filter((item) => item.food.includes(temp))\n        : [...recipeData]\n    );\n  };\n\n\n  return (\n    <Container style={{marginTop: \"40px\"}}>\n      <Typography variant=\"h2\">Nurtitional Analysis</Typography>\n      <Box>\n        <Grid\n          container\n          justifyContent=\"space-between\"\n          style={{ margin: \"20px 0\" }}\n        >\n          <Grid item>\n            <Box>\n              {/* <InputLabel variant=\"Outlined\">Search Food</InputLabel> */}\n              <TextField\n                onChange={handleSearch}\n                id=\"search\"\n                name=\"search\"\n                label=\"Search Food\"\n                autoComplete=\"off\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Search />\n                    </InputAdornment>\n                  ),\n                }}\n                value={searchItem}\n              />\n            </Box>\n          </Grid>\n          <Grid>\n            <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={recipeData.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Paper style={{borderRadius: '16px'}} sx={{ width: \"100%\", overflow: \"hidden\" }} >\n        <TableContainer  sx={{ maxHeight: 440 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((col) => (\n                  <TableCell>{col}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {foundArr\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((item) => (\n                  <TableRow>\n                    <TableCell>\n                      <img\n                        alt={item.food}\n                        src={item.img}\n                        style={{\n                          height: \"50px\",\n                          width: \"45px\",\n                          borderRadius: \"25px\",\n                        }}\n                      ></img>\n                    </TableCell>\n                    <TableCell>{item.food}</TableCell>\n                    <TableCell>{item.cal}</TableCell>\n                    <TableCell>{item.carbs}</TableCell>\n                    <TableCell>{item.protein}</TableCell>\n                    <TableCell>{item.fat}</TableCell>\n                    <TableCell>{item.fiber}</TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Recipe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}